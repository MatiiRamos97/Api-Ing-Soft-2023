// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_ing_soft.Data;

#nullable disable

namespace api_ing_soft.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231126005351_actualizacion2")]
    partial class actualizacion2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Chorifests.Chorifest", b =>
                {
                    b.Property<int>("IDChorifest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CantidadAsistentes")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FinFechaInscripcion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("InicioFechaInscripcion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IDChorifest");

                    b.ToTable("Chorifests");
                });

            modelBuilder.Entity("Menues.Bebida", b =>
                {
                    b.Property<int>("IdBebida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("ConHielo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdBebida");

                    b.ToTable("Bebidas");
                });

            modelBuilder.Entity("Menues.Chori", b =>
                {
                    b.Property<int>("IdChori")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("ConPapas")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("EsVegano")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdChori");

                    b.ToTable("Choris");
                });

            modelBuilder.Entity("Menues.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("EsVegano")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TieneExtra")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdMenu");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Menues.Producto", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdProducto");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Personas.Persona", b =>
                {
                    b.Property<int>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PersonaID");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("TipoPersona").HasValue("Persona");
                });

            modelBuilder.Entity("Personas.Admin", b =>
                {
                    b.HasBaseType("Personas.Persona");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Admin");
                });
#pragma warning restore 612, 618
        }
    }
}
